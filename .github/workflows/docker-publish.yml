name: Docker Build and Publish

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  repository_dispatch:
    types: [docker-publish]
  workflow_dispatch:
    inputs:
      ZOU_VERSION:
        description: "Zou Version"
        required: true
        default: "0"
      LATEST:
        description: "Latest"
        required: true
        default: false
        type: boolean

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Set Environment Variable
        run: |
          # Zou version
          if [ -n "${{ github.event.client_payload.ZOU_VERSION }}" ]; then
            ZOU_VERSION=${{ github.event.client_payload.ZOU_VERSION }}
          else
            ZOU_VERSION=${{ inputs.ZOU_VERSION }}
          fi
          echo "ZOU_VERSION=$ZOU_VERSION" >> $GITHUB_ENV

          # Latest tag
          if [ -z "${{ inputs.LATEST }}" ] || [ "${{ inputs.LATEST }}" == "true" ]; then
            LATEST="true"
          else
            LATEST="false"
          fi
          echo "LATEST=$LATEST" >> $GITHUB_ENV

      - name: Zou version and Latest tag
        run: |
          echo "The ZOU_VERSION is ${{ env.ZOU_VERSION }}"
          echo "Latest tag is set to  ${{ env.LATEST }}"

      - name: Checkout repository
        uses: actions/checkout@v3.5.0

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PAT }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4.3.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: latest=${{ env.LATEST }}
          tags: type=raw,value=${{ env.ZOU_VERSION }}

      - name: Meta version
        run: echo "The Meta is ${{ steps.meta.outputs.tags }}"

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: ZOU_VERSION=${{ env.ZOU_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max